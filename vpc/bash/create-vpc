#!/usr/bin/env bash

set -e

# Create VPC
VPC_NAME="my-new-vpc"
VPC_ID=$(
    aws ec2 create-vpc \
        --cidr-block "172.1.0.0/16" \
        --region us-east-2 \
        --tag-specifications "ResourceType=vpc,Tags=[{Key=Name,Value=$VPC_NAME}]" \
        --query Vpc.VpcId \
        --output text
)

if [ -z "$VPC_ID" ]; then
    echo -e "\e[31mFailed to create VPC.\e[0m"
fi

echo "VPC ID: $VPC_ID"

# Turn on DNS Hostnames
aws ec2 modify-vpc-attribute \
    --vpc-id $VPC_ID \
    --enable-dns-hostnames "{\"Value\":true}"

# Create IGW
IGW_ID=$(
    aws ec2 create-internet-gateway \
        --query InternetGateway.InternetGatewayId \
        --output text
)

if [ -z "$IGW_ID" ]; then
    echo -e "\e[31mFailed to create IGW.\e[0m"
fi

echo "IGW ID: $IGW_ID"

# Attach IGW to VPC
aws ec2 attach-internet-gateway \
    --internet-gateway-id $IGW_ID \
    --vpc-id $VPC_ID

echo -e "\e[32mAttached IGW ($IGW_ID) to VPC ($VPC_ID).\e[0m"

# Create new subnet
SUBNET_ID=$(
    aws ec2 create-subnet \
        --vpc-id $VPC_ID \
        --cidr-block "172.1.0.0/20" \
        --query Subnet.SubnetId \
        --output text
)

if [ -z "$SUBNET_ID" ]; then
    echo -e "\e[31mFailed to create Subnet.\e[0m"
fi

echo "Subnet ID: $SUBNET_ID"

# Auto assign IPv4
aws ec2 modify-subnet-attribute \
    --subnet-id $SUBNET_ID \
    --map-public-ip-on-launch

# Explicitly associate subnets to route table
RT_ID=$(
    aws ec2 describe-route-tables \
        --filters "Name=vpc-id,Values=$VPC_ID" "Name=association.main,Values=true" \
        --query RouteTables[].RouteTableId[] \
        --output text
)

echo "Route Table ID: $RT_ID"

aws ec2 associate-route-table \
    --route-table-id $RT_ID \
    --subnet-id $SUBNET_ID

# Add route for RT to our IGW
aws ec2 create-route \
    --route-table-id $RT_ID \
    --destination-cidr-block "0.0.0.0/0" \
    --gateway-id $IGW_ID
